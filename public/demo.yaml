openapi: 3.0.0
info:
  title: Taxi Order API
  description: Open API by Kartashev Alexey
  contact:
    name: alexOnOff
    url: https://github.com/alexOnOff
  version: 1.0.0
path:
    /buyers:
    get:
      summary: All clients of app
      operationId: listClients
      tags:
        - clients
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clients'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add new client
      operationId: addClient
      tags:
        - clients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

/clients/{client_id}:
    get:
      summary: Get client by id
      operationId: showClientById
      tags:
        - clients
      parameters:
        - name: clientId
          in: path
          required: true
          description: Client's Id
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Replace client by id
      operationId: replaceClient
      tags:
        - clients
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: integer
        - name: clients
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Patch client by id
      operationId: patchClient
      tags:
        - buyers
      parameters:
        - name: buyer_id
          in: path
          required: true
          schema:
            type: integer
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: surname
          in: query
          required: false
          schema:
            type: string
        - name: email 
          in: query
          required: false
          schema:
            type: string
        - name: password
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete client by id
      operationId: deleteClient
      tags:
        - clients
      parameters:
        - name: client_id 
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buyer'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

	/orders:
    get:
      summary: all orders
      operationId: listOrders
      tags:
        - orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add new order
      operationId: addOrder
      tags:
        - orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'	
	
	/orders/{order_id}:
    get:
      summary: Get order by id
      operationId: showOrderById
      tags:
        - orders
      parameters:
        - name: orderId
          in: path
          required: true
          description: Order's Id
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Replace order by id
      operationId: replaceOrder
      tags:
        - order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
        - name: item
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Patch order by id
      operationId: patchOrder
      tags:
        - orders
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
        - name: type
          in: query
          required: false
          schema:
            type: string
        - name: startPoint
          in: query
          required: false
          schema:
            type: string
        - name: finishPoint
          in: query
          required: false
          schema:
            type: string
        - name: time 
          in: query
          required: false
          schema:
            type: string
        - name: distance
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete order by id
      operationId: deleteOrder
      tags:
        - orders
      parameters:
        - name: order_id 
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

	/autos:
    get:
      summary: All autos
      operationId: listAutos
      tags:
        - autos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Autos'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add new auto
      operationId: addAuto
      tags:
        - autos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /autos/{auto_id}:
    get:
      summary: Get auto by id
      operationId: showAutoById
      tags:
        - Autos
      parameters:
        - name: autoId
          in: path
          required: true
          description: Auto's Id
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Replace auto by id
      operationId: replaceAuto
      tags:
        - autos
      parameters:
        - name: autoId
          in: path
          required: true
          schema:
            type: integer
        - name: auto
          in: query
          required: true
          schema:
            $ref: string
	   - name: cost
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Patch auto by id
      operationId: patchAuto
      tags:
        - shops
            parameters:
        - name: autoId
          in: path
          required: true
          schema:
            type: integer
        - name: auto
          in: query
          required: true
          schema:
            $ref: string
	   - name: cost
          in: path
          required: true
          schema:
            type: integer    
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete auto by id
      operationId: deleteAuto
      tags:
        - autos
      parameters:
        - name: auto_id 
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Error'
        '403':
          description: Forbiden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

	
	components:
  schemas:
    Client:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        password:
          type: string
    Clients:
      type: array
      items:
        $ref: "#/components/schemas/Client"
    Order:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        startPoint:
          type: string
        finishPoint:
          type: string
        time:
          type: string
        distance:
          type: integer
    Orders:
      type: array
      items:
        $ref: "#/components/schemas/Order"
    Auto:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        mark:
          type: string
        cost:
          type: integer
    Autos:
      type: array
      items:
        $ref: "#/components/schemas/Auto"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          $ref: '#/components/schemas/Code'
        message:
          type: string
        meta:
          type: object
    Code:
      type: string
      enum:
        - '200'
        - '201'
        - '400'
        - '401'
        - '403'
        - '404'
        - '500'
